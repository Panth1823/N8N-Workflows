{
  "name": "HR Emails Automation",
  "nodes": [
    {
      "parameters": {
        "amount": 10
      },
      "id": "dda76127-f312-4f90-a6f3-0c7a4dfc5fd1",
      "name": "Wait Between Emails1",
      "type": "n8n-nodes-base.wait",
      "position": [
        320,
        1728
      ],
      "typeVersion": 1.1,
      "webhookId": "34d7c15c-22d8-49b8-8240-0ed7fdc167de",
      "notes": "Wait 30 seconds between each email to avoid rate limits"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "88d7ea8a-c3c3-4b6f-ac8a-aac877f13bda",
              "leftValue": "={{$json[\"Email\"]}}",
              "rightValue": "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            },
            {
              "id": "07f8bfdf-368f-46a9-9600-be3556706046",
              "leftValue": "={{$json[\"Email\"]}}",
              "rightValue": "^(?:info|support|sales|admin|no[-.]?reply|noreply|contact|help|service|marketing|team|hello|hi)@",
              "operator": {
                "type": "string",
                "operation": "notRegex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "70eca3e4-3474-4daa-a3b0-e5d796aa2972",
      "name": "Email Validation1",
      "type": "n8n-nodes-base.if",
      "position": [
        -576,
        1808
      ],
      "typeVersion": 2.2,
      "notes": "Validates email format and filters generic emails"
    },
    {
      "parameters": {
        "jsCode": "// Get input items\nconst items = $input.all();\n\n// Config - Updated to start from current date\nconst RAMP_START = new Date('2025-09-28'); // Today's date\nconst LIMIT_BY_WEEK = [20, 50, 100, 150];  // weeks 1..4+, capped at last\n\n// Week since start (1-based, clamped)\nconst msPerWeek = 7 * 24 * 60 * 60 * 1000;\nconst weeksSinceStart = Math.floor((Date.now() - RAMP_START.getTime()) / msPerWeek) + 1;\nconst dailyLimit = LIMIT_BY_WEEK[Math.min(weeksSinceStart, LIMIT_BY_WEEK.length) - 1];\n\n// Local \"today\" to avoid UTC boundary surprises (00:00 local)\nconst now = new Date();\nconst today = `${now.getFullYear()}-${String(now.getMonth()+1).padStart(2,'0')}-${String(now.getDate()).padStart(2,'0')}`;\n\n// Get/reset counter\nlet sentToday = $getWorkflowStaticData('node');\nif (!sentToday.date || sentToday.date !== today) {\n  sentToday.date = today;\n  sentToday.count = 0;\n}\n\n// Calculate how many emails we can still send today\nconst remainingToday = Math.max(0, dailyLimit - sentToday.count);\n\nconsole.log('Rate limiting info:', { \n  today, \n  currentCount: sentToday.count, \n  dailyLimit, \n  remainingToday, \n  weeksSinceStart,\n  totalInputEmails: items.length\n});\n\n// If no emails can be sent today, return empty array\nif (remainingToday === 0) {\n  console.log('Daily limit reached - no emails will be sent');\n  return [];\n}\n\n// Take only the emails we can send today\nconst emailsToSend = items.slice(0, remainingToday);\n\n// DON'T UPDATE COUNTER HERE - wait until emails are actually sent\nconsole.log(`Preparing to send ${emailsToSend.length} emails. Current count: ${sentToday.count}/${dailyLimit}`);\n\n// Return ALL emails to send with metadata\nreturn emailsToSend.map((item, index) => ({\n  json: { \n    ...item.json, \n    canSend: true, \n    currentSentToday: sentToday.count,\n    dailyLimit, \n    weeksSinceStart,\n    batchSize: emailsToSend.length,\n    emailIndex: index + 1,\n    totalToSend: emailsToSend.length\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -352,
        1808
      ],
      "id": "8a2580ba-25e1-4b89-845b-43a09f598af6",
      "name": "Rate Limiter"
    },
    {
      "parameters": {
        "jsCode": "// Updated Email Creator without footer\nconst items = $input.all();\n\nreturn items.map(inputItem => {\n  const item = inputItem.json;\n\n  const firstName = item.Name ? item.Name.split(' ')[0] : 'there';\n  const company = item.Company || 'your organization';\n  const title = item.Title || 'hiring manager';\n\n  // Check if this is a follow-up email\n  const followUpCount = item.follow_up_count || 0;\n  const isFollowUp = followUpCount > 0;\n\n  // Follow-up email templates\n  const getFollowUpTemplate = (count, firstName, company) => {\n    const templates = {\n      1: {\n        subject: `Re: Frontend/Full-Stack Developer role at ${company}`,\n        body: `<p>Hi ${firstName},</p>\n        <p>I wanted to follow up on my previous email about the developer role at ${company}.</p>\n        <p>I understand you're busy, but I'm genuinely excited about the possibility of contributing to your team with my experience in React, PostgreSQL, and automation workflows.</p>\n        <p>Would a brief 10-minute call this week work for you?</p>\n        <p>Best,<br>Panth</p>`\n      },\n      2: {\n        subject: `Quick question about ${company}'s tech team`,\n        body: `<p>Hi ${firstName},</p>\n        <p>I've been following ${company}'s work and I'm impressed by your technical approach.</p>\n        <p>Given my experience building scalable applications and automation systems, I'd love to explore how I might contribute to your technical challenges.</p>\n        <p>If now isn't the right time, I completely understand. Would you prefer I reach back out in a few months?</p>\n        <p>Thanks,<br>Panth</p>`\n      },\n      3: {\n        subject: `Final check-in - ${firstName}`,\n        body: `<p>Hi ${firstName},</p>\n        <p>I'll keep this brief - I've reached out a few times about developer opportunities at ${company}.</p>\n        <p>If you're not the right person to speak with, could you kindly point me in the right direction? Or if there's no current fit, no worries at all!</p>\n        <p>Either way, I won't take up any more of your time after this.</p>\n        <p>Best wishes,<br>Panth</p>`\n      }\n    };\n    \n    return templates[count] || templates[1];\n  };\n\n  let subject, emailBody;\n\n  if (isFollowUp && followUpCount <= 3) {\n    const template = getFollowUpTemplate(followUpCount, firstName, company);\n    subject = template.subject;\n    emailBody = template.body;\n  } else {\n    const subjects = [\n      `Excited about Frontend/Full-Stack Developer role at ${company}`,\n      `Applying for Full-Stack Developer/Frontend Developer role at ${company}`,\n      `Passionate about building scalable web apps at ${company}`,\n      `Frontend Developer reaching out for potential role at ${company}`,\n    ];\n    subject = subjects[Math.floor(Math.random() * subjects.length)];\n\n    emailBody = `<p>Hi ${firstName},</p>\n\n<p>I'm Panth Shah, a Computer Science graduate with 1+ years of experience in <strong>No-Code and Full-Stack Web Design & Development</strong>, while also learning and building <strong>AI automation workflows</strong> as an added skill.</p>\n\n<p><strong>What I've delivered:</strong></p>\n<ul>\n  <li>Engineered responsive React + PostgreSQL applications, boosting engagement by 30–35%</li>\n  <li>Optimized backend APIs, reducing latency by 30% and improving user satisfaction</li>\n  <li>Designed user-friendly web interfaces and no-code solutions using Webflow</li>\n  <li>Built automation workflows with N8N, OpenAI & Supabase – enabling smarter systems as a bonus capability</li>\n</ul>\n\n<p>I believe my technical skills align well with ${company}'s innovative direction.</p>\n\n<p><strong>My profiles:</strong></p>\n<ul>\n  <li>Portfolio: <a href=\"https://bento.me/panth\">https://bento.me/panth</a></li>\n  <li>LinkedIn: <a href=\"https://www.linkedin.com/in/panth1823/\">https://www.linkedin.com/in/panth1823/</a></li>\n  <li>GitHub: <a href=\"https://github.com/Panth1823\">https://github.com/Panth1823</a></li>\n</ul>\n\n<p>I've attached my resume for your review. Would you be open to a brief 10-minute conversation about where my skills in frontend, full-stack, and automation could contribute at ${company}?</p>\n\n<p>Best regards,<br>\nPanth Shah<br>\n<a href=\"mailto:panthshah242@gmail.com\">panthshah242@gmail.com</a></p>`;\n  }\n\n  const subjectType = isFollowUp ? `followup_${followUpCount}` : 'initial';\n\n  return {\n    json: {\n      ...item,\n      emailSubject: subject,\n      emailBody: emailBody,\n      firstName: firstName,\n      subjectType: subjectType,\n      senderName: \"Panth Shah\",\n      senderEmail: \"panthshah242@gmail.com\",\n      isFollowUp: isFollowUp,\n      followUpCount: followUpCount,\n      emailHeaders: {\n        'X-Priority': '3',\n        'Importance': 'Normal',\n        'X-Mailer': 'N8N-Automation',\n        'Reply-To': 'panthshah242@gmail.com'\n      }\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -128,
        1808
      ],
      "id": "78b7fc83-60a5-4757-a447-12f668105d68",
      "name": "Email Creator"
    },
    {
      "parameters": {
        "url": "https://drive.google.com/uc?export=download&id=1lcVI2WjCH0gleXTLgWWm78s7yVFRKitT",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        544,
        1728
      ],
      "id": "8a4588f5-befe-46f1-864e-a32f51680404",
      "name": "Download Resume",
      "alwaysOutputData": true,
      "executeOnce": true,
      "notes": "Downloads resume as binary data"
    },
    {
      "parameters": {
        "sendTo": "=shahpanth234@gmail.com",
        "subject": "={{ $json.emailSubject }}",
        "message": "={{ $json.emailBody }}",
        "options": {
          "attachmentsUi": {
            "attachmentsBinary": [
              {}
            ]
          },
          "bccList": "panthshah242@gmail.com"
        }
      },
      "id": "a802229a-764a-45a5-9170-1be04ce50ec4",
      "name": "Send Gmail",
      "type": "n8n-nodes-base.gmail",
      "position": [
        768,
        1728
      ],
      "typeVersion": 2.1,
      "webhookId": "cb664c42-26d3-42c9-813d-5b7797c0ae26",
      "alwaysOutputData": true,
      "credentials": {
        "gmailOAuth2": {
          "id": "MlXRK1UDUd9HDyhc",
          "name": "Gmail account"
        }
      },
      "continueOnFail": true,
      "notes": "Send email to actual recipient with resume"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1ppnhORx-3hJaYJql5jI48Zzijvn1zFKAHH2ifMrk3O8",
          "mode": "list",
          "cachedResultName": "Company Wise HR Contacts - HR Contacts",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ppnhORx-3hJaYJql5jI48Zzijvn1zFKAHH2ifMrk3O8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1121278036,
          "mode": "list",
          "cachedResultName": "Table 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ppnhORx-3hJaYJql5jI48Zzijvn1zFKAHH2ifMrk3O8/edit#gid=1121278036"
        },
        "options": {}
      },
      "id": "643e5d01-e3d5-4f02-970c-ee70d6c7a41d",
      "name": "Google Sheets - Read HR Data",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -1024,
        1808
      ],
      "typeVersion": 4.7,
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "gIoExWSCkfUaJYCE",
          "name": "Google Sheets account"
        }
      },
      "notes": "Import your HR contacts CSV to Google Sheets first"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "76230d18-088a-4c0c-afb2-21ad2b30b276",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "position": [
        -800,
        1808
      ],
      "typeVersion": 2,
      "notes": "Removes duplicate email addresses"
    },
    {
      "parameters": {
        "jsCode": "// Update the counter for successfully sent email\nconst item = $input.first();\n\n// Get today's date\nconst now = new Date();\nconst today = `${now.getFullYear()}-${String(now.getMonth()+1).padStart(2,'0')}-${String(now.getDate()).padStart(2,'0')}`;\n\n// Get/update counter\nlet sentToday = $getWorkflowStaticData('node');\nif (!sentToday.date || sentToday.date !== today) {\n  sentToday.date = today;\n  sentToday.count = 0;\n}\n\n// Increment counter by 1 for this successfully sent email\nsentToday.count += 1;\n\nconsole.log(`Email sent successfully to: ${item.json.Email}`);\nconsole.log(`Total sent today: ${sentToday.count}`);\n\n// Return the item with success status\nreturn [{\n  json: {\n    ...item.json,\n    emailStatus: 'sent',\n    totalSentToday: sentToday.count,\n    sentDate: new Date().toISOString(),\n    success: true\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1216,
        1632
      ],
      "id": "877adc3e-4c39-4346-9e88-55ec6f3b46ae",
      "name": "Update Counter1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "// Handle failed email\nconst item = $input.first();\n\n// Extract error message if available\nlet errorMessage = 'Unknown error';\nif (item.json.error) {\n  errorMessage = typeof item.json.error === 'string' ? item.json.error : JSON.stringify(item.json.error);\n} else if (item.json.message) {\n  errorMessage = item.json.message;\n}\n\nconsole.log(`Email failed to send to: ${item.json.Email}`);\nconsole.log(`Error: ${errorMessage}`);\n\n// Return item with failed status\nreturn [{\n  json: {\n    ...item.json,\n    emailStatus: 'failed',\n    failureReason: errorMessage,\n    failedDate: new Date().toISOString(),\n    success: false\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1216,
        1824
      ],
      "id": "3bcef7de-1732-4645-abf5-b37d9fca200e",
      "name": "Handle Failures1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1nO5qulxBJVXZSSdqqeZNqNCBPMQNDUibBvZGwO6G-Wo",
          "mode": "list",
          "cachedResultName": "HR Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nO5qulxBJVXZSSdqqeZNqNCBPMQNDUibBvZGwO6G-Wo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1nO5qulxBJVXZSSdqqeZNqNCBPMQNDUibBvZGwO6G-Wo/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "emailSubject": "={{ $json.emailSubject }}",
            "email ": "={{ $json.Email }}",
            "Name ": "={{ $json.Name }}",
            "Company ": "={{ $json.Company }}",
            "status ": "={{ $json.emailStatus }}",
            "sentDate ": "={{ $now.format('MM-DD HH:mm:ss') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "email ",
              "displayName": "email ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Name ",
              "displayName": "Name ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Company ",
              "displayName": "Company ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "status ",
              "displayName": "status ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "sentDate ",
              "displayName": "sentDate ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "emailSubject",
              "displayName": "emailSubject",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "da37fea2-a4c5-4785-bf16-064649ea25d0",
      "name": "Log to Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        1664,
        1808
      ],
      "typeVersion": 4.7,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "gIoExWSCkfUaJYCE",
          "name": "Google Sheets account"
        }
      },
      "notes": "Log sent emails for tracking"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5afe75fb-0362-442c-b2d5-25873059a159",
              "name": "emailStatus",
              "value": "={{ $json.emailStatus }}",
              "type": "string"
            },
            {
              "id": "63ca4777-d636-4bbc-8e90-84b13485b820",
              "name": "failureReason",
              "value": "={{ $json.failureReason }}",
              "type": "string"
            },
            {
              "id": "8d5ea9a4-b935-492a-913c-7e3b644bb1de",
              "name": "SNo",
              "value": "={{ $('Download Resume').item.json.SNo }}",
              "type": "number"
            },
            {
              "id": "cd380045-b087-441f-9207-916ad351b779",
              "name": "Name",
              "value": "={{ $('Download Resume').item.json.Name }}",
              "type": "string"
            },
            {
              "id": "f897bb52-37a1-4979-b042-00bdbea25470",
              "name": "Email",
              "value": "={{ $('Download Resume').item.json.Email }}",
              "type": "string"
            },
            {
              "id": "3ac6efb9-23c2-4810-ad72-28a9bd1fdc01",
              "name": "Title",
              "value": "={{ $('Download Resume').item.json.Title }}",
              "type": "string"
            },
            {
              "id": "044f8868-2669-461f-ba70-bd067489d37b",
              "name": "Company",
              "value": "={{ $('Download Resume').item.json.Company }}",
              "type": "string"
            },
            {
              "id": "7cd30591-5fa5-497b-8eac-0732afd712db",
              "name": "emailSubject",
              "value": "={{ $('Download Resume').item.json.emailSubject }}",
              "type": "string"
            },
            {
              "id": "cf53b800-264f-4813-9da9-8c072f46356a",
              "name": "firstName",
              "value": "={{ $('Download Resume').item.json.firstName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1440,
        1728
      ],
      "id": "08a5fea3-1114-4848-9ad9-40c7e16b4e59",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1248,
        1808
      ],
      "id": "c32aa639-57c9-49a6-8aea-7ab0dbcae428",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "88364e2e-629a-43b0-8c40-30196f20b27c",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        992,
        1728
      ],
      "id": "33ccbedb-0935-4a93-b06c-3ae776afbbaf",
      "name": "If"
    },
    {
      "parameters": {
        "content": "## HR Emails Automation",
        "height": 80,
        "width": 400,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -144,
        1520
      ],
      "typeVersion": 1,
      "id": "6a807ef9-9850-440a-bb2f-8ebdfd5a2c6e",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        96,
        1808
      ],
      "id": "0142e65c-27ae-4f17-8711-691d67dfa4ab",
      "name": "Loop Over Items"
    }
  ],
  "pinData": {},
  "connections": {
    "Wait Between Emails1": {
      "main": [
        [
          {
            "node": "Download Resume",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Validation1": {
      "main": [
        [
          {
            "node": "Rate Limiter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rate Limiter": {
      "main": [
        [
          {
            "node": "Email Creator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Creator": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Resume": {
      "main": [
        [
          {
            "node": "Send Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Gmail": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets - Read HR Data": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Email Validation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Counter1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Handle Failures1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log to Google Sheets1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Log to Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Google Sheets - Read HR Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Update Counter1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Handle Failures1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Wait Between Emails1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "f9f42bc0-c29e-445f-8708-72c8f6fbc293",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "81806a7c98bb8d237bfcc1a0a10e3354bbc01ea162f99fd0b145ef31b6331051"
  },
  "id": "Xv13KpgzIBW0B96r",
  "tags": []
}